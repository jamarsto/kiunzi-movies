//file:noinspection GroovyAssignabilityCheck
plugins {
    id 'java-library'
    id 'io.quarkus'
    id 'maven-publish'
}

// repository for publishing artifacts
publishing {
    publications {
        maven(MavenPublication) {
            artifactId = 'movies'
        }
    }
    repositories {
        maven {
            url 'https://pkgs.dev.azure.com/jamarston/762ffd9e-ca64-466d-84e9-7a0e42e5d89a/_packaging/Artifacts/maven/v1'
            name 'Artifacts'
            credentials {
                username "jamarston"
                password "${System.env.ARTIFACT_TOKEN}"
            }
        }
    }
}

//noinspection GroovyUnusedAssignment
archivesBaseName = 'movies'
group = 'uk.co.jasonmarston.kiunzi'
version = '0.0.1-SNAPSHOT'

dependencies {
    //noinspection VulnerableLibrariesLocal
    implementation(enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}"))

    implementation project(':framework-input')
    implementation project(':framework-output')

    implementation 'io.quarkus:quarkus-config-yaml'
    implementation 'io.quarkus:quarkus-rest-jackson-common'
    implementation 'io.quarkus:quarkus-hibernate-reactive-panache'
    implementation 'io.quarkus:quarkus-smallrye-jwt'
    implementation 'io.quarkus:quarkus-reactive-mysql-client'
    implementation 'io.quarkus:quarkus-reactive-mssql-client'
    implementation 'io.quarkus:quarkus-reactive-oracle-client'
    implementation 'io.quarkus:quarkus-reactive-db2-client'
    implementation 'io.quarkus:quarkus-reactive-pg-client'
    implementation 'io.quarkus:quarkus-kubernetes'
    implementation 'io.quarkus:quarkus-kubernetes-config'
    implementation 'io.quarkus:quarkus-container-image-jib'

    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation 'io.rest-assured:rest-assured'

    nativeTestImplementation 'io.quarkus:quarkus-junit5'
    nativeTestImplementation 'io.rest-assured:rest-assured'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(20)
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

// Ensure the module name is correctly set for the compilation process
tasks.named('compileJava', JavaCompile) {
    doFirst {
        // If this option is available in your Gradle/JDK version, it forces the module name.
        options.compilerArgs.addAll([
                '--module-path', classpath.asPath
        ])
    }
}
